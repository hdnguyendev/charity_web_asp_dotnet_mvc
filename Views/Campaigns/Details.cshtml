@using static Microsoft.EntityFrameworkCore.DbLoggerCategory
@model DonationsWeb.Models.Campaign

@{
    ViewData["Title"] = "Details";
}

<div class="container mt-5">
    <h1 class="text-center mb-4">Campaign Details</h1>

    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card shadow-lg border-primary mb-3">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Campaign: @Html.DisplayFor(model => model.Title)</h4>
                </div>
                <div class="card-body">
                    <h5 class="card-title">Description</h5>
                    <div id="description" class="ck-content">
                        @Html.Raw(Model.Description)
                    </div>
                    <div class="mt-3">
                        <h6 class="fw-bold">Campaign Timeline</h6>
                        <p><strong>Start Date:</strong> @Html.DisplayFor(model => model.StartDate)</p>
                        <p><strong>End Date:</strong> @Html.DisplayFor(model => model.EndDate)</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card shadow-lg border-primary mb-3">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Funding Status</h4>
                </div>
                <div class="card-body text-center">
                    <h5 class="display-4 text-danger">$@Html.DisplayFor(model => model.CurrentAmount)</h5>
                    <h6 class="text-success">Goal: $@Html.DisplayFor(model => model.Goal)</h6>
                    <div class="progress mt-3">
                        <div class="progress-bar bg-success" role="progressbar" style="width: @((Model.CurrentAmount / Model.Goal) * 100)%" aria-valuenow="@((Model.CurrentAmount / Model.Goal) * 100)" aria-valuemin="0" aria-valuemax="100">
                            @((Model.CurrentAmount / Model.Goal * 100).ToString("0.0"))%
                        </div>
                    </div>
                    <img src="@Model.Image" class="img-fluid rounded shadow-sm mt-3" alt="Campaign Image" style="max-height: 200px; object-fit: cover;" />
                </div>
            </div>
        </div>
    </div>

    <!-- Donor Information -->
    <div class="card shadow-lg my-4">
        <div class="card-header bg-info text-white">
            <h5 class="mb-0">Donor Information</h5>
        </div>
        <div class="card-body">
            <p><strong>Created By:</strong> @Html.DisplayFor(model => model.User.Name)</p>
            <h5 class="mt-4">Donations for this Campaign</h5>
            @if (Model.Donations == null || !Model.Donations.Any())
            {
                <p class="text-center">No donations have been made for this campaign yet.</p>
            }
            else
            {
                <table class="table table-striped table-bordered">
                    <thead class="table-primary">
                        <tr>
                            <th>ID</th>
                            <th>Donor Name</th>
                            <th>Amount</th>
                            <th>Date</th>
                            <th>Message</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Donations.Count; i++)
                        {
                            var donation = Model.Donations.ElementAt(i); 
                            <tr>
                                <td>@(i + 1)</td> <!-- Serial number -->
                                <td>@Html.DisplayFor(modelItem => donation.User.Name)</td>
                                <td>$@Html.DisplayFor(modelItem => donation.Amount)</td>
                                <td>@Html.DisplayFor(modelItem => donation.DonationDate)</td>
                                <td>@Html.DisplayFor(modelItem => donation.Message)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

<!-- Include CKEditor for potential future use -->
<script src="https://cdn.ckeditor.com/ckeditor5/39.0.0/classic/ckeditor.js"></script>
<script>
    ClassicEditor
        .create(document.querySelector('#description'), {
            toolbar: [], // Disable toolbar for read-only view
        }).then(editor => {
            editor.isReadOnly = true; // Set the editor to read-only
        })
        .catch(error => {
            console.error(error);
        });
</script>

<style>
    .ck-content {
        background-color: #f8f9fa;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ced4da;
    }

    .fw-bold {
        font-weight: 700;
    }

    .text-success {
        color: #28a745; /* Green for goal */
    }

    .text-danger {
        color: #dc3545; /* Red for current amount */
    }
</style>
