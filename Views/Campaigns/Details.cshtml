@using Microsoft.AspNetCore.Http
@model DonationsWeb.Models.Campaign

@{
ViewData["Title"] = "Details";
}

<div class="container mt-5">
    <h1 class="text-center mb-4">@Model.Title</h1>
    <div class="d-flex justify-content-between my-3">
        <div class="">
            <span> <strong>@Html.DisplayFor(model => model.StartDate)</strong></span>
            <span class="text-muted">to</span>
            <span> <strong>@Html.DisplayFor(model => model.EndDate)</strong></span>
        </div>
        <div>
            <span class="badge bg-success fw-bold ">Ongoing</span>
        </div>
    </div>

    <div class="row">
        <!-- Left Column: Image and Summary -->
        <div class="col-md-8">
            <img src="@Model.Image" alt="Campaign Image" class="img-fluid rounded-3 mb-4" />

            <div class="card">
                <div class="card-body">

                    <p>@Html.Raw(Model.Description)</p>
                </div>
            </div>
        </div>

        <!-- Right Column: Donation Info -->
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-body bg-light p-3">
                    <h5 class="card-title text-center">Fundraising Progress</h5>
                    <canvas id="fundraisingChart"></canvas>
                    <div class="d-flex justify-content-between">
                        <p class="text-dark fw-bold">$@Model.Goal <small class="text-body">Goal</small></p>
                        <p class="text-dark fw-bold">$@Model.CurrentAmount <small class="text-body">Raised</small></p>
                    </div>
                    <div class="progress mt-3" style="height: 25px;">
                        <div class="progress-bar bg-success" role="progressbar"
                            aria-valuenow="@((Model.CurrentAmount / Model.Goal) * 100)" aria-valuemin="0"
                            aria-valuemax="100" style="width: @((Model.CurrentAmount / Model.Goal) * 100)%;">
                            <span>@((Model.CurrentAmount / Model.Goal * 100).ToString("0.0"))%</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <form id="donationForm">
                        <div class="mb-3">
                            <label class="form-label">Donation Amount</label>
                            <div class="btn-group d-flex justify-content-around mb-2">
                                <input type="radio" class="btn-check" name="Amount" id="btnradio1" value="10" checked>
                                <label class="btn btn-light py-3" for="btnradio1">$10</label>

                                <input type="radio" class="btn-check" name="Amount" id="btnradio2" value="20">
                                <label class="btn btn-light py-3" for="btnradio2">$20</label>

                                <input type="radio" class="btn-check" name="Amount" id="btnradio3" value="30">
                                <label class="btn btn-light py-3" for="btnradio3">$30</label>

                                <input type="radio" class="btn-check" name="Amount" id="customAmount" value="custom">
                                <label class="btn btn-light py-3" for="customAmount">Other</label>
                                <input type="number" class="form-control" id="customAmountInput" name="CustomAmount"
                                    placeholder="Enter amount" style="display:none;" min="1">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="message" class="form-label">Message (Optional)</label>
                            <textarea class="form-control" id="message" name="Message" rows="3"></textarea>
                        </div>
                        <button type="button" class="btn btn-primary w-100" data-bs-toggle="modal"
                            data-bs-target="#paymentModal">
                            <i class="fa fa-donate"></i>
                            Donate Now
                            <i class="ti-arrow-right ms-2"></i>
                        </button>
                    </form>
                </div>
            </div>
        </div>

    </div>
    <!-- Payment Modal -->
    <div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="paymentModalLabel">Payment Information</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="paymentForm" method="post" asp-action="Donate" asp-controller="Donations">
                        <input type="hidden" name="CampaignId" value="@Model.CampaignId" />
                        <input type="hidden" name="UserId" value="@Context.Session.GetString("UserId")" />
                        <input type="hidden" name="Amount" />
                        <input type="hidden" name="Message" />
                        <div class="mb-3">
                            <label for="cardNumber" class="form-label">Card Number</label>
                            <input type="text" class="form-control" id="cardNumber" name="CardNumber">
                        </div>
                        <div class="mb-3">
                            <label for="expiryDate" class="form-label">Expiry Date</label>
                            <input type="text" class="form-control" id="expiryDate" name="ExpiryDate"
                                placeholder="MM/YY">
                        </div>
                        <div class="mb-3">
                            <label for="cvv" class="form-label">CVV</label>
                            <input type="text" class="form-control" id="cvv" name="CVV">
                        </div>
                        <div class="mb-3">
                            <label for="billingAddress" class="form-label">Billing Address</label>
                            <input type="text" class="form-control" id="billingAddress" name="BillingAddress">
                        </div>
                        <div class="mb-3">
                            <label for="billingCity" class="form-label">City</label>
                            <input type="text" class="form-control" id="billingCity" name="BillingCity">
                        </div>
                        <div class="mb-3">
                            <label for="billingZip" class="form-label">ZIP Code</label>
                            <input type="text" class="form-control" id="billingZip" name="BillingZip">
                        </div>
                        <button type="submit" class="btn btn-primary w-100">
                            Complete Donation
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-lg my-4">
        <div class="card-header bg-info text-white">
            <h5 class="mb-0">Donor Information</h5>
        </div>
        <div class="card-body">
            <p><strong>Created By:</strong> @Html.DisplayFor(model => model.User.Name)</p>
            <h5 class="mt-4">Donations for this Campaign</h5>

            @if (Model.Donations == null || !Model.Donations.Any())
            {
            <p class="text-center">No donations have been made for this campaign yet.</p>
            }
            else
            {
            <table id="donationTable" class="table table-striped table-hover table-bordered">
                <thead class="table-primary">
                    <tr>
                        <th>ID</th>
                        <th>Donor Name</th>
                        <th>Amount</th>
                        <th>Date</th>
                        <th>Message</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Donations.Count; i++) { var donation=Model.Donations.ElementAt(i); <tr>
                        <td>@(i + 1)</td>
                        <td>@Html.DisplayFor(modelItem => donation.User.Name)</td>
                        <td>$@Html.DisplayFor(modelItem => donation.Amount)</td>
                        <td>@Html.DisplayFor(modelItem => donation.DonationDate)</td>
                        <td>@Html.DisplayFor(modelItem => donation.Message)</td>
                        </tr>
                        }
                </tbody>
            </table>
            }
        </div>
    </div>

</div>
<script>
    $(document).ready(function () {
        // Hiện thị trường nhập tiền tùy chỉnh khi chọn tùy chọn "Custom"
        $('input[name="Amount"]').on('change', function () {
            if ($(this).val() === 'custom') {
                $('#customAmountInput').show();
            } else {
                $('#customAmountInput').hide().val(''); // Ẩn và xóa giá trị
            }
        });

        // Khi nhấn vào nút "Complete Donation", bạn có thể thêm một số kiểm tra nếu cần
        $('#paymentForm').on('submit', function (event) {
            event.preventDefault();
            // get amount message from donationForm
            var amount = $('#donationForm input[name="Amount"]:checked').val();

            // if      custom amount is selected, get the value from the input
            if (amount === 'custom') {
                amount = $('#customAmountInput').val();
            }

            var message = $('#donationForm textarea[name="Message"]').val();
            // set amount message to paymentForm
            $('#paymentForm input[name="Amount"]').val(amount);
            $('#paymentForm input[name="Message"]').val(message);

            // ajax 
            $.ajax({
                url: '@Url.Action("Donate", "Donations")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {

                        location.reload();


                    } else {
                        alert(response.message);
                    }
                },
                error: function (response) {
                    alert(response.message);
                }
            });

        });


        $('#donationTable').DataTable({
            paging: true,
            searching: true,
            ordering: true,
            order: [[3, 'desc'], [0, 'asc']], // Sắp xếp theo ngày giảm dần và ID tăng dần
            language: {
                search: "Search:",
                lengthMenu: "Show _MENU_ entries",
                info: "Showing page _PAGE_ of _PAGES_",
                paginate: {
                    first: "First",
                    last: "Last",
                    next: "Next",
                    previous: "Previous"
                }
            }
        });
    });
    // Biểu đồ fundraising
    const ctx = document.getElementById('fundraisingChart').getContext('2d');
    const fundraisingChart = new Chart(ctx, {
        type: 'doughnut', // Hoặc bạn có thể thay đổi sang 'bar', 'line', v.v.
        data: {
            labels: ['Raised', 'Remaining'],
            datasets: [{
                data: [@Model.CurrentAmount, @Model.Goal - @Model.CurrentAmount],
                backgroundColor: ['#4caf50', '#e0e0e0'], // Màu sắc cho các phần
                hoverOffset: 4
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    callbacks: {
                        label: function (tooltipItem) {
                            return tooltipItem.label + ': $' + tooltipItem.raw;
                        }
                    }
                }
            }
        }
    });
</script>